felix.startlevel.framework=30

org.osgi.framework.system.packages=org.osgi.framework; version=1.4.0, \
    org.osgi.service.condpermadmin; version=1.0.0, \
    org.osgi.service.packageadmin; version=1.2.0, \
    org.osgi.service.permissionadmin; version=1.2.0, \
    org.osgi.service.startlevel; version=1.1.0, \
    org.osgi.service.url; version=1.0.0, \
    org.osgi.service.log; version=1.3, \
	org.osgi.service.http; version=1.2, \
	org.osgi.service.device; version=1.1, \
	org.osgi.service.cm; version=1.2, \
	org.osgi.service.metatype; version=1.1, \
	org.osgi.service.prefs; version=1.1, \
	org.osgi.service.useradmin; version=1.1, \
	org.osgi.service.wireadmin; version=1.0, \
	org.osgi.service.io; version=1.0, \
	org.osgi.service.provisioning; version=1.1, \
	org.osgi.service.upnp; version=1.1, \
	org.osgi.service.component; version=1.0, \
	org.osgi.service.event; version=1.1, \
	org.osgi.service.deploymentadmin; version=1.0, \
	org.osgi.service.deploymentadmin.spi; version=1.0, \
	org.osgi.service.application; version=1.0, \
	info.dmtree; version=1.0, \
	info.dmtree.notification; version=1.0, \
	info.dmtree.notification.spi; version=1.0, \
	info.dmtree.registry; version=1.0, \
	info.dmtree.security; version=1.0, \
	info.dmtree.spi; version=1.0, \
	org.osgi.service.monitor; version=1.0, \
	org.osgi.application; version=1.0, \
	org.osgi.util.tracker; version=1.3.2, \
	org.osgi.util.xml; version=1.0, \
	org.osgi.util.position; version=1.0, \
	org.osgi.util.measurement; version=1.0 
	
	
# An integer value indicating the degree of logging reported by the framework; 
# a higher value results in more logging. If zero ('0') is specified, then logging 
# is turned off completely. The log levels match those specified in the OSGi Log 
# Service (i.e., 1 = error, 2 = warning, 3 = information, and 4 = debug). 
# The default value is 1.
#felix.log.level=4

# Space-delimited list of bundle URLs to automatically install when Felix is started, 
# where <n> is the start level into which the bundle will be installed 
# (e.g., felix.auto.install.2).
# felix.auto.install.1=/Users/ieb/.m2/repository/org/springframework/osgi/samples/simple-service-bundle/1.1.1/simple-service-bundle-1.1.1.jar 
 

# Space-delimited list of bundle URLs to automatically install and start when 
# Oscar is started, where <n> is the start level into which the bundle will be 
# installed (e.g., felix.auto.start.2).
#felix.auto.start.1=file:bundle/shell.jar file:bundle/shelltui.jar \
# file:bundle/bundlerepository.jar \
# file:bundle/simple-service-bundle-1.1.1.jar 
#felix.auto.start.30= \
#  \
# file:bundle/simple-service-bundle-1.1.1.jar 

# The initial start level of the framework once it starts execution; the default 
# value is 1.
felix.startlevel.framework=30 

# The default start level for newly installed bundles; the default value is 1.
felix.startlevel.bundle=30

# Flag to indicate whether Felix should enable the URL Handlers service, which 
# will result in calls to URL.setURLStreamHandlerFactory() and 
# URLConnection.setContentHandlerFactory(). The default value is "true" to enable the 
# URL Handlers service.
#felix.service.urlhandlers - 

# Flag to indicate whether Felix is embedded into a host application; the default 
# value is "false". If this flag is "true" then Felix will not call System.exit() 
# upon termination.
#felix.embedded.execution 

# Flag to indicate whether Felix is running in strict OSGi mode; the default value 
# is "true". If this flag is "false" it currently enables a single non-OSGi-compliant 
# feature: persisting BundleActivators that implement Serializable. This feature is 
# not recommended since it is non-compliant.
#felix.strict.osgi 

# Sets the buffer size to be used by the bundle cache when copying JAR files and input 
# streams; the default value is 4096 bytes. The integer value of this string provides 
# control over the size of the internal buffer of the disk cache for performance reasons.
#felix.cache.bufsize

# Sets the directory to be used by the bundle cache as its cache directory. The cache 
# directory is where all profile directories are stored and a profile directory is 
# where a set of installed bundles are stored. By default, the cache directory is 
# .felix in the user's home directory. If this property is specified, then its value 
# will be used as the cache directory instead of .felix. This directory will be created 
# if it does not exist.
#felix.cache.dir 

# Sets the profile name that will be used to create a profile directory inside of 
# the bundle cache directory. The created directory will contain all installed bundles 
# associated with the profile.
#felix.cache.profile 

# Sets the directory to use as the profile directory for the bundle cache; by default
# the profile name is used to create a directory in the .felix bundle cache directory 
# (more precisely ${felix.cache.dir}/${felix.cache.profile}). If the 
# felix.cache.profiledir property is specified, then the cache directory and profile 
# name properties are ignored since they are only used to calculate the profile 
# directory. The specified value of the profile directory property is used directly 
# as the directory to contain all cached bundles. This directory will be created if 
# it does not exist.
#felix.cache.profiledir 
	