<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:tns="http://ns.sakaiproject.org/2008/components" elementFormDefault="qualified"
  targetNamespace="http://ns.sakaiproject.org/2008/components" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:complexType name="Component">
    <xs:annotation>
      <xs:documentation>The definition of a component</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element minOccurs="1" name="groupId" type="xs:string">
        <xs:annotation>
          <xs:documentation>The Maven group ID of the component</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="1" name="artifactId" type="xs:string">
        <xs:annotation>
          <xs:documentation>The Maven artifact ID of the component</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="1" name="version" type="xs:string">
        <xs:annotation>
          <xs:documentation>The version of the component</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="classifier" type="xs:string">
        <xs:annotation>
          <xs:documentation>The classifier of the component eg jdk15</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="1" name="documentation" type="xs:string">
        <xs:annotation>
          <xs:documentation>Documentation describing the component</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="1" name="activator" type="xs:string">
        <xs:annotation>
          <xs:documentation>The classname to use as the activator for 
          the component</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="componentDependencies" type="tns:ArrayOfDependencies">
        <xs:annotation>
          <xs:documentation>A list of components that this component depends on, 
          and must be started first</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="dependencies" type="tns:ArrayOfDependencies">
        <xs:annotation>
          <xs:documentation>A list of dependencies for this component, these are 
          jars that will be added to the component classloader or the shared 
          classloader depending on the scope</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="exports" type="tns:ArrayOfExports">
        <xs:annotation>
          <xs:documentation>A list of package exports that this component 
          exports to other components.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="unmanaged" type="xs:boolean" default="false">
        <xs:annotation>
          <xs:documentation>If the component is managed it may be started and stopped. 
          If its not managed, then its assumed to be present in the classloader.
          Unmanaged components are rare, so you should set this false unless you really
          know what you are doing.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:element name="component" type="tns:Component">
    <xs:annotation>
      <xs:documentation>The root element of the component spec</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ArrayOfDependencies">
    <xs:annotation>
      <xs:documentation>A list of classpath dependencies</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="dependency" type="tns:Dependency">
        <xs:annotation>
          <xs:documentation>A jar dependency that will be added to one of the classloaders </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Dependency">
    <xs:annotation>
      <xs:documentation>Defines a dependency of this component</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element minOccurs="1" name="groupId" type="xs:string">
        <xs:annotation>
          <xs:documentation>The group ID of the dependency, as per maven 2</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="1" name="artifactId" type="xs:string">
        <xs:annotation>
          <xs:documentation>The artifact ID of the dependency, as per maven 2</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="1" name="version" type="xs:string">
        <xs:annotation>
          <xs:documentation>The version of the dependency, as per maven 2</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="classifier" type="xs:string">
        <xs:annotation>
          <xs:documentation>The classifier of the dependency, as per maven 2</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="scope" type="tns:scope">
        <xs:annotation>
          <xs:documentation>The scope of the dependency defining the classloader that this 
        dependency will be added to, NOT as per maven2</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="type" type="xs:string" default="jar">
        <xs:annotation>
          <xs:documentation>The type of the dependency, as per maven 2</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="unmanaged" type="xs:boolean" default="false">
        <xs:annotation>
          <xs:documentation>If the dependency is not managed, it will not be started 
        (when used in a component dependency)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="ArrayOfExports">
    <xs:annotation>
      <xs:documentation>A set of exports from this component</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="export" type="tns:PackageExport" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PackageExport">
    <xs:annotation>
      <xs:documentation>Defines packages that should be exported from this component</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element minOccurs="1" name="name" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:simpleType name="scope">
    <xs:annotation>
      <xs:documentation>The Scope of the dependency determining which classloader its added to</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="LOCAL">
        <xs:annotation>
          <xs:documentation>Add this dependency local to the component classloader
             at test and runtime</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="LOCAL_RUNTIME">
        <xs:annotation>
          <xs:documentation>Add this dependency local to the component classloader
             at runtime, but not at test</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SHARE">
        <xs:annotation>
          <xs:documentation>Add this dependency local to the shared classloader
             at test and runtime</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SHARE_RUNTIME">
        <xs:annotation>
          <xs:documentation>Add this dependency local to the component classloader
             at runtime, but not at test</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>