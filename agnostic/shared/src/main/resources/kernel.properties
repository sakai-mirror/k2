
# specify a list of ComponentSpecification locations (ResourceLoader style) separated by ; that
# either point to component xml files or if start with class: are classes. These are 
# the list of components loaded in the bootstrap phase of the kernel starting up.
components=class:org.sakaiproject.kernel.component.core.KernelBootstrapSpec

 

# A list of locations (seperated by ;) to search for components (on disk) where component jars 
# may be found. These can point to jar files directly, or to directories. If directories they 
# will be searched for jar files, and considered as classpath entries in their own right.
# You could for example point to the maven generated target/classes directroy of a project under
# development
component.locations=k2components 


# This controlls if classloader isolation is used in the kernel. If classloader isolation is used,
# which is the default then components are placed in ther own seperate classloader. 
# If class loader isolation is not used, then components are loaded into the current classloader.
# When the kernel is deployed you wil always want classloader isolation, the *only* time when classloader
# isolation may not be wanted, is in unit tests, when exported jars are visible to the unit test classloader.
kernel.classloadeIsolation=true
