

This is an attempt to boot strap k1 as a k2 component


It will first attempt to startup the Spring Component Manager, then crawl thrue the api classes found in the kernel-api jar and register each bean under the correct api anem.

add this to the component.locations property in the bootstrap project:
maven-repo:org.sakaiproject.kernel2.agnostic:k1-component:0.1-SNAPSHOT:jar


orignial readme txt below
-------------------
This is a very simple component sample.

It creates a jar that contains a component defined in
src/main/resources/SAKAI-INF/component.xml

The component, exports one API.
org.sakaiproject.componentsample.api.HelloWorldService

and is started by an activator
org.sakaiproject.componentsample.Activator

that registers the implementation of the service.
org.sakaiproject.componentsample.core.HelloWorldServiceImpl


To build

mvn clean install

Then add to the localkernel.properties in the bootstrap project
eg
component.locations=maven-repo:org.sakaiproject.kernel2.agnostic:kernel:0.1-SNAPSHOT:jar;maven-repo:org.sakaiproject.kernel2.agnostic:component-sample:0.1-SNAPSHOT:jar;

and start the tomcat instance.
